# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[easy_install]
find_links = https://data.pyg.org/whl/torch-1.12.0+cpu.html
             https://download.pytorch.org/whl/cpu


[metadata]
name = olorenchemengine
description = Oloren ChemEngine is a library for molecular property prediction, uncertainty quantification and interpretability. It includes 50+ models and molecular representations under a unified API, which achieves state-of-the-art performances on a variety of molecular property prediction tasks. The diversity of models and representations is achieved by integrating all top-performing methods in the literature as well an in-house methods.
author = Oloren AI
author_email = contact@oloren.ai
license_files = LICENSE.txt
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/Oloren-AI/olorenchemengine
# Add here related links, for example:
#project_urls =
#    Documentation = https://pyscaffold.org/
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    google-auth-oauthlib<0.5
    pytorch-lightning<=1.6.2
    Cython
    gspread
    descriptastorus
    pytest-cov
    firebase_admin
    pytest-timeout
    sphinx
    furo
    hyperopt
    google-cloud-storage
    gcsfs
    ogb
    pyrebase4
    xgboost==1.4.2
    protobuf==3.20.1
    pytorch_lightning==1.4.1
    torchmetrics==0.6.0

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
testing =
    setuptools
    pytest
    pytest-cov
tensorflow = 
    tensorflow
    tensorboard
representations = 
    pubchempy
    gensim
    mordred

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = olorenchemengine.module:function
# For example:
# console_scripts =
#     fibonacci = olorenchemengine.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov olorenchemengine --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
timeout = 30
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.1.1
package = olorenchemengine

[pytest]
timeout = 60
